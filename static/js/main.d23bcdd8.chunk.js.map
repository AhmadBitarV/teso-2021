{"version":3,"sources":["containers/ToDo.module.scss","components/task/task.module.scss","components/input/input.module.scss","components/button/button.module.scss","components/input/input.tsx","components/button/button.tsx","components/task/task.tsx","containers/ToDo.tsx","App.tsx","index.tsx"],"names":["module","exports","input","props","className","styles","input__label","htmlFor","label","autoFocus","onChange","changed","placeholder","type","value","ref","reference","Button","onClick","clicked","button","button__pink","text","Task","inputStyle","task__status","completed","task__status__green","role","task","title","deleted","task__content","body","statusUpdated","ToDo","useState","tasks","setTasks","setTitle","setBody","setCompleted","error","setError","inputRef","useRef","useEffect","JSON","parse","localStorage","getItem","taskList","map","id","updatedTasks","indexOfClickedTask","forEach","index","splice","setItem","stringify","onDeleteHandler","status","onStatusUpdateHandler","toDo","content","form","onSubmit","e","preventDefault","length","Math","random","updatedList","current","focus","event","target","checked","errorMessage","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d23bcdd8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"toDo\":\"ToDo_toDo__1Sfw7\",\"content\":\"ToDo_content__2Jx8l\",\"form\":\"ToDo_form__2YTsc\",\"taskList\":\"ToDo_taskList__1o60Q\",\"errorMessage\":\"ToDo_errorMessage__32uQ5\",\"button\":\"ToDo_button__1faCl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"task_task__2gK2B\",\"slideRight\":\"task_slideRight__Ae2AR\",\"task__status\":\"task_task__status__2GYQN\",\"task__content\":\"task_task__content__1w7s7\",\"task__status__green\":\"task_task__status__green__37OHQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"input_input__Q80XR\",\"input__label\":\"input_input__label__6niAg\",\"input__button\":\"input_input__button__2BckE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__H5057\",\"button__pink\":\"button_button__pink__2OIjw\"};","import React from 'react';\nimport styles from './input.module.scss';\n\ninterface InputProps {\n  type: string;\n  autoFocus?: boolean;\n  changed: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  placeholder?: string;\n  value?: string;\n  label: string;\n  checked: boolean | null;\n  reference?: any;\n}\n\nconst input: React.FC<InputProps> = (props) => {\n  return (\n    <div className={styles.input}>\n      <label className={styles.input__label} htmlFor=\"\">\n        {props.label}\n      </label>\n      <input\n        autoFocus={props.autoFocus}\n        onChange={props.changed}\n        placeholder={props.placeholder}\n        type={props.type}\n        value={props.value}\n        ref={props.reference}\n      />\n    </div>\n  );\n};\n\nexport default input;\n","import styles from './button.module.scss';\n\nconst Button: React.FC<{ clicked?: any; className?: string; text: string }> = (\n  props\n) => {\n  return (\n    <button\n      onClick={props.clicked}\n      className={`${styles.button} ${styles.button__pink}`}\n    >\n      {props.text}\n    </button>\n  );\n};\n\nexport default Button;\n","import styles from './task.module.scss';\n\ninterface TaskProps {\n  completed: boolean;\n  title: string;\n  body: string;\n  statusUpdated: () => void;\n  deleted?: () => void;\n}\n\nconst Task: React.FC<TaskProps> = (props) => {\n  let inputStyle = `${styles.task__status} ${\n    props.completed === true ? styles.task__status__green : ''\n  }`;\n\n  return (\n    <div role=\"contentinfo\" className={styles.task}>\n      <h5>{props.title}</h5>\n      <span onClick={props.deleted}>X</span>\n      <p className={styles.task__content}>{props.body}</p>\n      <p className={inputStyle} onClick={props.statusUpdated}>\n        {props.completed === true ? 'Completed' : 'In progress'}\n      </p>\n    </div>\n  );\n};\n\nexport default Task;\n","import { useEffect, useRef, useState } from 'react';\nimport styles from './ToDo.module.scss';\n\nimport Input from '../components/input/input';\nimport Button from '../components/button/button';\nimport Task from '../components/task/task';\n\ninterface TaskData {\n  title: string;\n  body: string;\n  status: boolean;\n  id?: number;\n}\n\nconst ToDo = () => {\n  /// State\n  const [tasks, setTasks] = useState<TaskData[] | []>([]);\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [completed, setCompleted] = useState(false);\n  const [error, setError] = useState('');\n\n  /// Refs\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  // State Management\n  const onTitleHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n  };\n\n  const onBodyHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setBody(event.target.value);\n  };\n\n  const onStatusUpdateHandler = (id: number) => {\n    let updatedTasks = [...tasks];\n    let indexOfClickedTask = 0;\n    updatedTasks.forEach((task, index) => {\n      if (task.id === id) indexOfClickedTask = index;\n    });\n    tasks[indexOfClickedTask].status = !tasks[indexOfClickedTask].status;\n    setTasks([...tasks]);\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  };\n\n  const onDeleteHandler = (id: number) => {\n    let updatedTasks = [...tasks];\n    let indexOfClickedTask = 0;\n\n    updatedTasks.forEach((task, index) => {\n      if (task.id === id) indexOfClickedTask = index;\n    });\n\n    updatedTasks.splice(indexOfClickedTask, 1);\n    localStorage.setItem('tasks', JSON.stringify(updatedTasks));\n\n    setTasks(updatedTasks);\n  };\n\n  const onStatusHandler = () => {\n    setCompleted(!completed);\n  };\n\n  // Side affects - Reaching out to localStorage\n  useEffect(() => {\n    const tasks = JSON.parse(localStorage.getItem('tasks') || '[]');\n    setTasks(tasks);\n  }, []);\n\n  // Handing the \"Submit\" button click\n  function submit(e: React.ChangeEvent<HTMLFormElement>) {\n    e.preventDefault();\n    if (title.length !== 0 && body.length !== 0) {\n      const task = {\n        title,\n        body,\n        status: completed,\n        id: Math.random() * 100000,\n      };\n\n      let updatedList = [...tasks, task];\n      setTasks(updatedList);\n      setTitle('');\n      setBody('');\n      localStorage.setItem('tasks', JSON.stringify(updatedList));\n    } else {\n      setError('You should fill both fields first...');\n      inputRef.current?.focus();\n    }\n  }\n\n  let taskList = [];\n  taskList = tasks.map((task: TaskData) => {\n    return (\n      <Task\n        key={task.id}\n        title={task.title}\n        body={task.body}\n        deleted={() => onDeleteHandler(task.id!)}\n        completed={task.status}\n        statusUpdated={() => onStatusUpdateHandler(task.id!)}\n      />\n    );\n  });\n\n  return (\n    <div className={styles.toDo}>\n      <main className={styles.content}>\n        <h2>Write Your Todos</h2>\n        <form className={styles.form} onSubmit={submit}>\n          <Input\n            label=\"Todo Title\"\n            autoFocus\n            changed={onTitleHandler}\n            placeholder={\"Complete Today's Programming Test\"}\n            type=\"text\"\n            value={title}\n            checked={null}\n            reference={inputRef}\n          />\n\n          <Input\n            label=\"Content\"\n            changed={onBodyHandler}\n            placeholder={'Build a Todo app with React and TypeScript'}\n            type=\"text\"\n            value={body}\n            checked={null}\n          />\n\n          <Input\n            label=\"Mark Completed\"\n            changed={onStatusHandler}\n            type=\"checkbox\"\n            checked={completed}\n          />\n          <p className={styles.errorMessage}>{error}</p>\n          <Button className={styles.button} text=\"Add A ToDo\" />\n        </form>\n        <div className={styles.taskList}>{taskList}</div>\n      </main>\n    </div>\n  );\n};\n\nexport default ToDo;\n","import ToDo from './containers/ToDo';\nimport './App.scss';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <ToDo />\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}