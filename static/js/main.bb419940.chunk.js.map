{"version":3,"sources":["containers/ToDoList.module.scss","components/button/button.module.scss","components/task.module.scss","components/button/button.tsx","components/task.tsx","containers/ToDoList.tsx","App.tsx","index.tsx"],"names":["module","exports","Button","props","onClick","clicked","className","styles","button","button__pink","children","Task","title","body","ToDoList","useState","toDoTasks","setToDoTasks","setTitle","setBody","error","setError","formIsValid","setFormIsValid","onDeletehandler","console","log","useEffect","length","tasks","map","task","Math","random","Tasks","onSubmit","input","input__label","htmlFor","onChange","event","target","value","input__input","placeholder","type","input__button","e","preventDefault","taskList","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+EACAA,EAAOC,QAAU,CAAC,MAAQ,wBAAwB,MAAQ,wBAAwB,aAAe,+BAA+B,aAAe,+BAA+B,cAAgB,gCAAgC,KAAO,uBAAuB,OAAS,2B,oBCArQD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,aAAe,+B,iBCAjED,EAAOC,QAAU,CAAC,KAAO,qB,gLCYVC,EAXiD,SAACC,GAC/D,OACE,wBACEC,QAASD,EAAME,QACfC,UAAS,UAAKC,IAAOC,OAAZ,YAAsBD,IAAOE,cAFxC,SAIGN,EAAMO,Y,gBCKEC,EAX8D,SAC3ER,GAEA,OACE,sBAAKG,UAAWC,IAAOI,KAAMP,QAASD,EAAME,QAA5C,UACE,6BAAKF,EAAMS,QACX,4BAAIT,EAAMU,WCqGDC,EAjGE,WACf,MAAkCC,mBAA0B,IAA5D,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOH,EAAP,KAAcM,EAAd,KACA,EAAwBH,mBAAS,IAAjC,mBAAOF,EAAP,KAAaM,EAAb,KACA,EAAkCJ,mBAAS,IAA3C,mBACA,GADA,UAC0BA,mBAAS,KAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAsCN,oBAAS,GAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KAkBMC,EAAkB,WACtBC,QAAQC,IAAI,YAGdC,qBAAU,WAnBa,IAAjBf,EAAMgB,QAAgC,IAAhBf,EAAKe,OAC7BP,EAAS,+BAETE,GAAe,KAkBhB,CAACX,EAAOC,IAmBX,IAAIgB,EAYJ,OAXAA,EAAQb,EAAUc,KAAI,SAACC,GACrB,OACE,cAAC,EAAD,CAEEnB,MAAOmB,EAAKnB,MACZC,KAAMkB,EAAKlB,KACXR,QAASmB,GAHY,IAAhBQ,KAAKC,aASd,uBAAM3B,UAAWC,IAAO2B,MAAOC,SAAU,kBAAMV,QAAQC,IAAI,UAA3D,UACE,sBAAKpB,UAAWC,IAAO6B,MAAvB,UACE,uBAAO9B,UAAWC,IAAO8B,aAAcC,QAAQ,GAA/C,mBAGA,uBACEC,SApDe,SAACC,GACtBtB,EAASsB,EAAMC,OAAOC,QAoDhBpC,UAAWC,IAAOoC,aAClBC,YAAY,kBACZC,KAAK,YAIT,sBAAKvC,UAAWC,IAAO6B,MAAvB,UACE,uBAAO9B,UAAWC,IAAO8B,aAAcC,QAAQ,GAA/C,2BAGA,uBACEC,SA5Dc,SAACC,GACrBrB,EAAQqB,EAAMC,OAAOC,QA4DfpC,UAAWC,IAAOoC,aAClBC,YAAY,2EACZC,KAAK,YAIT,4BAAIzB,IAEJ,cAAC,EAAD,CAAQd,UAAWC,IAAOuC,cAAezC,QAzD7C,SAAgB0C,GAGd,GAFAA,EAAEC,iBACFvB,QAAQC,IAAIJ,GACRA,EAAa,CACf,IAAIS,EAAO,CACTnB,QACAC,QAGFI,EAAa,GAAD,mBAAKD,GAAL,CAAgBe,KAC5BN,QAAQC,IAAIV,GACZE,EAAS,IACTC,EAAQ,IACRI,GAAe,KA4Cf,iBAGA,qBAAKjB,UAAWC,IAAO0C,SAAvB,SAAkCpB,Q,MC7FzBqB,MARf,WACE,OACE,qBAAK5C,UAAU,MAAf,SACE,cAAC,EAAD,OCDN6C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bb419940.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Tasks\":\"ToDoList_Tasks__YHDE_\",\"input\":\"ToDoList_input__2Jyi8\",\"input__label\":\"ToDoList_input__label__1Pjcc\",\"input__input\":\"ToDoList_input__input__3kXXv\",\"input__button\":\"ToDoList_input__button__2Kryp\",\"logo\":\"ToDoList_logo__3V8OX\",\"button\":\"ToDoList_button__c4oRt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__H5057\",\"button__pink\":\"button_button__pink__2OIjw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Task\":\"task_Task__3PepI\"};","import styles from \"./button.module.scss\";\n\nconst Button: React.FC<{ clicked?: any; className?: string }> = (props) => {\n  return (\n    <button\n      onClick={props.clicked}\n      className={`${styles.button} ${styles.button__pink}`}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import styles from \"./task.module.scss\";\n\nconst Task: React.FC<{ title: string; body: string; clicked: () => void }> = (\n  props\n) => {\n  return (\n    <div className={styles.Task} onClick={props.clicked}>\n      <h5>{props.title}</h5>\n      <p>{props.body}</p>\n    </div>\n  );\n};\n\nexport default Task;\n","import { useEffect, useState } from \"react\";\nimport styles from \"./ToDoList.module.scss\";\n\nimport Button from \"../components/button/button\";\nimport Task from \"../components/task\";\n\ninterface ItemData {\n  title: string;\n  body: string;\n  completed?: boolean;\n}\n\nconst ToDoList = () => {\n  const [toDoTasks, setToDoTasks] = useState<ItemData[] | []>([]);\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [completed, setCompleted] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const validateInput = () => {\n    if (title.length === 0 || body.length === 0) {\n      setError(\"Please add a Title and Body\");\n    } else {\n      setFormIsValid(true);\n    }\n  };\n\n  const onTitleHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n  };\n\n  const onTodoHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setBody(event.target.value);\n  };\n\n  const onDeletehandler = () => {\n    console.log(\"Deleted\");\n  };\n\n  useEffect(() => {\n    validateInput();\n  }, [title, body]);\n\n  function submit(e: any) {\n    e.preventDefault();\n    console.log(formIsValid);\n    if (formIsValid) {\n      let task = {\n        title,\n        body,\n      };\n\n      setToDoTasks([...toDoTasks, task]);\n      console.log(toDoTasks);\n      setTitle(\"\");\n      setBody(\"\");\n      setFormIsValid(false);\n    }\n  }\n\n  let tasks = [];\n  tasks = toDoTasks.map((task: { title: string; body: string }) => {\n    return (\n      <Task\n        key={Math.random() * 100}\n        title={task.title}\n        body={task.body}\n        clicked={onDeletehandler}\n      />\n    );\n  });\n\n  return (\n    <form className={styles.Tasks} onSubmit={() => console.log(\"Hello\")}>\n      <div className={styles.input}>\n        <label className={styles.input__label} htmlFor=\"\">\n          Title\n        </label>\n        <input\n          onChange={onTitleHandler}\n          className={styles.input__input}\n          placeholder=\"Do my teso Task\"\n          type=\"text\"\n        />\n      </div>\n\n      <div className={styles.input}>\n        <label className={styles.input__label} htmlFor=\"\">\n          To Do details\n        </label>\n        <input\n          onChange={onTodoHandler}\n          className={styles.input__input}\n          placeholder=\"Finish Teso task successfully by writing clean TypeScript and React Code\"\n          type=\"text\"\n        />\n      </div>\n\n      <p>{error}</p>\n\n      <Button className={styles.input__button} clicked={submit}>\n        Add\n      </Button>\n      <div className={styles.taskList}>{tasks}</div>\n    </form>\n  );\n};\n\nexport default ToDoList;\n","import ToDoList from \"./containers/ToDoList\";\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ToDoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}